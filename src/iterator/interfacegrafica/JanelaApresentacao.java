/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iterator.interfacegrafica;

import iterator.classededados.Piloto;
import iterator.persistencia.PilotoPersistencia;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Iterator;

/**
 *
 * @author pedro
 */
public class JanelaApresentacao extends javax.swing.JFrame {

    /**
     * Creates new form JanelaApresentacao
     */
    public JanelaApresentacao() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonListarOsPilotosLinkedList = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDados = new javax.swing.JTable();
        jButtonListarOsPilotosTreeSet = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jButtonListarOsPilotosHashSet = new javax.swing.JButton();
        jButtonListarOsPilotosPriorityQueue = new javax.swing.JButton();
        jButtonListarOsPilotosQueue = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonListarOsPilotosLinkedList.setText("Listar os Pilotos - LinkedList");
        jButtonListarOsPilotosLinkedList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarOsPilotosLinkedListActionPerformed(evt);
            }
        });

        jTableDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "País", "Idade", "Equipe", "Fabricante", "Pontos"
            }
        ));
        jScrollPane1.setViewportView(jTableDados);

        jButtonListarOsPilotosTreeSet.setText("Listar os Pilotos - TreeSet");
        jButtonListarOsPilotosTreeSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarOsPilotosTreeSetActionPerformed(evt);
            }
        });

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jButtonListarOsPilotosHashSet.setText("Listar os Pilotos - HashSet");
        jButtonListarOsPilotosHashSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarOsPilotosHashSetActionPerformed(evt);
            }
        });

        jButtonListarOsPilotosPriorityQueue.setText("Listar os Pilotos - PriorityQueue");
        jButtonListarOsPilotosPriorityQueue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarOsPilotosPriorityQueueActionPerformed(evt);
            }
        });

        jButtonListarOsPilotosQueue.setText("Listar os Pilotos - Queue");
        jButtonListarOsPilotosQueue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarOsPilotosQueueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButtonListarOsPilotosLinkedList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonListarOsPilotosTreeSet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonListarOsPilotosHashSet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonListarOsPilotosPriorityQueue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonListarOsPilotosQueue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonLimpar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonListarOsPilotosLinkedList)
                    .addComponent(jButtonListarOsPilotosTreeSet)
                    .addComponent(jButtonLimpar)
                    .addComponent(jButtonListarOsPilotosHashSet)
                    .addComponent(jButtonListarOsPilotosPriorityQueue)
                    .addComponent(jButtonListarOsPilotosQueue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void imprimirDadosNaGrid(Iterator conjunto) {
        DefaultTableModel model = (DefaultTableModel) jTableDados.getModel();
        model.setNumRows(0);
        while (conjunto.hasNext()) {
            String[] linha = new String[7];
            Piloto objetoPiloto = (Piloto) conjunto.next();
            linha[0] = objetoPiloto.getCodigo();
            linha[1] = objetoPiloto.getNome();
            linha[2] = objetoPiloto.getPais();
            linha[3] = objetoPiloto.getIdade();
            linha[4] = objetoPiloto.getEquipe();
            linha[5] = objetoPiloto.getFabricanteMotor();
            linha[6] = objetoPiloto.getPontos();
            model.addRow(linha);
        }
    }

    private void jButtonListarOsPilotosLinkedListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarOsPilotosLinkedListActionPerformed
        try {
            PilotoPersistencia dados = new PilotoPersistencia("/home/pedro/IdeaProjects/padroes/src/iterator/dados/DadosDosPilotosF1 2.csv");
            imprimirDadosNaGrid(dados.listagemDePilotosLinkedList());
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButtonListarOsPilotosLinkedListActionPerformed

    private void jButtonListarOsPilotosTreeSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarOsPilotosTreeSetActionPerformed
        try {
            PilotoPersistencia dados = new PilotoPersistencia("/home/pedro/IdeaProjects/padroes/src/iterator/dados/DadosDosPilotosF1 2.csv");
            imprimirDadosNaGrid(dados.listagemDePilotosTreeSet());
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButtonListarOsPilotosTreeSetActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTableDados.getModel();
        model.setNumRows(0);
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jButtonListarOsPilotosHashSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarOsPilotosHashSetActionPerformed
        try {
            PilotoPersistencia dados = new PilotoPersistencia("/home/pedro/IdeaProjects/padroes/src/iterator/dados/DadosDosPilotosF1 2.csv");
            imprimirDadosNaGrid(dados.listagemDePilotosHashSet());
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButtonListarOsPilotosHashSetActionPerformed

    private void jButtonListarOsPilotosPriorityQueueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarOsPilotosPriorityQueueActionPerformed
        try {
            PilotoPersistencia dados = new PilotoPersistencia("/home/pedro/IdeaProjects/padroes/src/iterator/dados/DadosDosPilotosF1 2.csv");
            imprimirDadosNaGrid(dados.listagemDePilotosPriorityQueue());
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButtonListarOsPilotosPriorityQueueActionPerformed

    private void jButtonListarOsPilotosQueueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarOsPilotosQueueActionPerformed
        try {
            PilotoPersistencia dados = new PilotoPersistencia("/home/pedro/IdeaProjects/padroes/src/iterator/dados/DadosDosPilotosF1 2.csv");
            imprimirDadosNaGrid(dados.listagemDePilotosQueue());
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButtonListarOsPilotosQueueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaApresentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaApresentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaApresentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaApresentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaApresentacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonListarOsPilotosHashSet;
    private javax.swing.JButton jButtonListarOsPilotosLinkedList;
    private javax.swing.JButton jButtonListarOsPilotosPriorityQueue;
    private javax.swing.JButton jButtonListarOsPilotosQueue;
    private javax.swing.JButton jButtonListarOsPilotosTreeSet;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDados;
    // End of variables declaration//GEN-END:variables
}
